@startuml

!includeurl "https://raw.githubusercontent.com/slim-gears/rxrpc/master/uml/skin.puml"

package Client <<Java / TypeScript>> #lightgray {
    package RxClient #orange {
        EndpointInvoker - RxTransport
    }

    class CustomEndpointClient <<generated>> {
        + foo(args): Observable<Bar>
    }

    CustomEndpointClient -(0- EndpointInvoker

    note right of CustomEndpointClient
    Autogenerated client proxy
    for each user-defined endpoint
    end note
}


rectangle RxTransport #cyan {
}

package Server <<Java>> #lightgray {
    package RxServer #lime {
        RxTransport - EndpointRouter
    }

    class CustomEndpointRouter <<generated>>
    class CustomEndpoint <<user defined>> {
        + foo(args): Observable<Bar>
    }

    EndpointRouter -(0- CustomEndpointRouter
    CustomEndpointRouter -(0- CustomEndpoint

    note left of CustomEndpointRouter
    Autogenerated router
    for each user-defined endpoint
    end note
}

/'note right of CustomEndpoint
Endpoint class/interface, exposing
asynchronous methods.
Currently supported async return types are:
*""Observable<T>""
*""Single<T>""
*""Maybe<T>""
*""Completable""
*""Publisher<T>""
*""Future<T>""
end note'/

note bottom of RxTransport
**Custom transport**
Following transports are supported out of the shelf:
*WebSocket
*HTTP polling
 ...
*Custom transport implementation

end note

@enduml

@startuml

package Client <<Java / TypeScript>> #lightgray {
    package RxClient #cyan {
        EndpointInvoker <-> RxTransport
    }

    class EndpointClient <<generated>>
    EndpointClient --> EndpointInvoker: <<uses>>

}

note right of EndpointClient
Autogenerated proxy
end note

rectangle RxTransport #orange {
}

package Server <<Java>> #lightgray {
    package RxServer #lime {
        EndpointDispatcher <-> RxTransport
    }

    class Endpoint <<user defined>>
    EndpointDispatcher --> Endpoint: <<uses>>
}

note right of Endpoint
Endpoint class/interface, exposing
asynchronous methods.
Currently supported async return types are:
*""Observable<T>""
*""Single<T>""
*""Maybe<T>""
*""Completable""
*""Publisher<T>""
*""Future<T>""
end note


note bottom of RxTransport
**Custom transport**
Following transports are supported out of the shelf:
*WebSocket
*HTTP polling
 ...
*Custom transport implementation

end note

@enduml

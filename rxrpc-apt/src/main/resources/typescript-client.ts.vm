import { RxRpcClient } from 'rxrpc-client';
import { Observable } from 'rxjs';

export class $targetClass.simpleName() {
    constructor(private client: RxRpcClient) {
    }

#foreach ($m in $methods)
    public $m.name()(##
#foreach ($p in $m.params())##
$p.name(): $tsUtils.toTypeScriptType($p.type())##
#if ($foreach.hasNext), #end##
#end): Observable<$tsUtils.toTypeScriptType($m.returnType().elementType())> {
        return this.client.invoke('$m.name()', {
#foreach ($p in $m.params())##
            $p.name(): $p.name()#if ($foreach.hasNext),#end

#end
        });
    }
#if ($foreach.hasNext)

#end
#end
}

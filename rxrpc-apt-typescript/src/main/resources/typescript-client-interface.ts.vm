$imports

#macro (typeParams $type)##
#if (!$type.typeParams().isEmpty())##
<##
#foreach($tp in $type.typeParams())##
$tp.name()##
#if($foreach.hasNext), #end##
#end##
>##
#end##
#end##
##
export interface $targetClass.simpleName()#typeParams($sourceClass)
#if (!$interfaces.isEmpty())##
 extends ##
#foreach ($iface in $interfaces)$[$iface]#if($foreach.hasNext), #end##
#end##
#end##
 {
#foreach ($m in $sourceClass.methods())
    $m.name()(##
#foreach ($p in $m.params())##
$p.name(): $[$tsUtils.toTypeScriptType($p.type())]##
#if ($foreach.hasNext), #end##
#end): $[rxjs.Observable<$tsUtils.toTypeScriptType($utils.elementType($m.returnType()))>];
#end
}

$imports

#macro (typeParams $type)##
#if (!$type.typeParams().isEmpty())##
<##
#foreach($tp in $type.typeParams())##
$tp.name()##
#if($foreach.hasNext), #end##
#end##
>##
#end##
#end##
##
##
#macro (interfaces $interfaces)##
#if (!$interfaces.isEmpty())##
 extends ##
#foreach ($iface in $interfaces)$[$iface]#if($foreach.hasNext), #end##
#end##
#end##
#end##
/**
 * Generated from $sourceClass.name()
 */
export interface $targetClass.simpleName()#typeParams($sourceClass)#interfaces($interfaces) {
#foreach($p in $properties)
    $p.name()#if ($p.isOptional())?#end: $[$tsUtils.toTypeScriptType($p.type())];
#end
}
